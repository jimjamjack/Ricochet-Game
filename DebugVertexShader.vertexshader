#version 330 core

// Input: Vertex data
layout (location = 0) in vec3 vertexPosition;
layout (location = 1) in vec3 vertexColour;

// Output: colour
out vec3 colour;

// Use a uniform for the current projection and view matrices
uniform mat4 projection;
uniform mat4 view;

void main() {
	// Get the position of the vertex in world space
    gl_Position = projection * view * vec4(vertexPosition, 1);

	// Set the colour of the vertex
    colour = vertexColour;
}